select pylog100();
 pylog100 
----------
        2
(1 row)

select pylog(10000, 10);
 pylog 
-------
     4
(1 row)

select pybool('f');
 pybool 
--------
 f
(1 row)

select pybool('t');
 pybool 
--------
 t
(1 row)

select pyint(NULL::int2);
ERROR:  exception occurred: (plcontainer.c:249)
DETAIL:  
 Function produced NULL output 
 Traceback (most recent call last):
  File "<string>", line 4, in pyint
TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'
select pyint(123::int2);
 pyint 
-------
   124
(1 row)

select pyint(234::int4);
 pyint 
-------
   236
(1 row)

select pyint(345::int8);
 pyint 
-------
   348
(1 row)

select pyfloat(3.1415926535897932384626433832::float4);
 pyfloat 
---------
 4.14159
(1 row)

select pyfloat(3.1415926535897932384626433832::float8);
     pyfloat      
------------------
 5.14159265358979
(1 row)

select pynumeric(3.1415926535897932384626433832::numeric);
    pynumeric     
------------------
 6.14159265358979
(1 row)

select pytimestamp('2012-01-02 12:34:56.789012'::timestamp);
           pytimestamp           
---------------------------------
 Mon Jan 02 12:34:56.789012 2012
(1 row)

select pytimestamptz('2012-01-02 12:34:56.789012 UTC+4'::timestamptz);
            pytimestamptz            
-------------------------------------
 Mon Jan 02 08:34:56.789012 2012 PST
(1 row)

select pytext('text');
 pytext  
---------
 textbar
(1 row)

select pytext('');
 pytext 
--------
 bar
(1 row)

select pyintarr(null::int8[]);
 pyintarr 
----------
         
(1 row)

select pyintarr('{}'::int8[]);
 pyintarr 
----------
        0
(1 row)

select pyintarr(array[1]::int8[]);
 pyintarr 
----------
        1
(1 row)

select pyintarr(array[1,2,3,4,5]::int8[]);
 pyintarr 
----------
       15
(1 row)

select pyintarr(array[array[1,2,3,4,5],array[6,7,8,9,10]]::int8[]);
 pyintarr 
----------
       55
(1 row)

select pyfloatarr(array[1.1,2.2,3.3]::float8[]);
 pyfloatarr 
------------
        2.2
(1 row)

select pyfloatarr(array[array[1.1,3.3,5.5,7.7],array[3.3,4.4,5.5,6.6]]::float8[]);
 pyfloatarr 
------------
      4.675
(1 row)

select pytextarr(array['aaa','bbb','ccc']::varchar[]);
  pytextarr   
--------------
 |aaa|bbb|ccc
(1 row)

select pytextarr(array['aaa','','ccc']::varchar[]);
 pytextarr 
-----------
 |aaa||ccc
(1 row)

select pytsarr(array['2010-01-01 00:00:00', '2010-02-02 01:01:01', '2010-03-03 03:03:03', '2012-01-01 00:00:00']::timestamp[]);
 pytsarr 
---------
       3
(1 row)

select pyintnulls(array[1,2,3,4,5,null]::int8[]);
 pyintnulls 
------------
          1
(1 row)

select pyintnulls(array[null,null,null]::int8[]);
 pyintnulls 
------------
          3
(1 row)

select pyreturnarrint1(5);
 pyreturnarrint1 
-----------------
 {f,t,t,t,t}
(1 row)

select pyreturnarrint2(6);
 pyreturnarrint2 
-----------------
 {0,1,2,3,4,5}
(1 row)

select pyreturnarrint4(7);
 pyreturnarrint4 
-----------------
 {0,1,2,3,4,5,6}
(1 row)

select pyreturnarrint8(8);
  pyreturnarrint8  
-------------------
 {0,1,2,3,4,5,6,7}
(1 row)

select pyreturnarrfloat4(9);
      pyreturnarrfloat4      
-----------------------------
 {0,0.5,1,1.5,2,2.5,3,3.5,4}
(1 row)

select pyreturnarrfloat8(10);
                                                 pyreturnarrfloat8                                                 
-------------------------------------------------------------------------------------------------------------------
 {0,0.333333333333333,0.666666666666667,1,1.33333333333333,1.66666666666667,2,2.33333333333333,2.66666666666667,3}
(1 row)

select pyreturnarrnumeric(11);
              pyreturnarrnumeric              
----------------------------------------------
 {0,0.25,0.5,0.75,1,1.25,1.5,1.75,2,2.25,2.5}
(1 row)

select pyreturnarrtext(12);
                                           pyreturnarrtext                                           
-----------------------------------------------------------------------------------------------------
 {number0,number1,number2,number3,number4,number5,number6,number7,number8,number9,number10,number11}
(1 row)

select pyreturnarrdate(13);
                                                                 pyreturnarrdate                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------
 {12-31-2016,01-01-2017,01-02-2017,01-03-2017,01-04-2017,01-05-2017,01-06-2017,01-07-2017,01-08-2017,01-09-2017,01-10-2017,01-11-2017,01-12-2017}
(1 row)

select pyreturntupint8();
 pyreturntupint8 
-----------------
 {0,1,2,3,4,5}
(1 row)

select pyreturnarrint8nulls();
   pyreturnarrint8nulls    
---------------------------
 {1,2,3,NULL,5,6,NULL,8,9}
(1 row)

select pyreturnarrtextnulls();
 pyreturnarrtextnulls 
----------------------
 {a,b,NULL,d,NULL,f}
(1 row)

select pyreturnarrmulti();
                       pyreturnarrmulti                        
---------------------------------------------------------------
 {{0,1,2,3,4},{0,1,2,3,4},{0,1,2,3,4},{0,1,2,3,4},{0,1,2,3,4}}
(1 row)

select pyreturnsetofint8(5);
 pyreturnsetofint8 
-------------------
                 0
                 1
                 2
                 3
                 4
(5 rows)

select pyreturnsetofint4arr(6);
 pyreturnsetofint4arr 
----------------------
 {0}
 {0,1}
 {0,1,2}
 {0,1,2,3}
 {0,1,2,3,4}
 {0,1,2,3,4,5}
(6 rows)

select pyreturnsetoftextarr(7);
  pyreturnsetoftextarr  
------------------------
 {n0}
 {n0,n1}
 {n0,n1,n2}
 {n0,n1,n2,n3}
 {n0,n1,n2,n3,n4}
 {n0,n1,n2,n3,n4,n5}
 {n0,n1,n2,n3,n4,n5,n6}
(7 rows)

select pyreturnsetofdate(8);
 pyreturnsetofdate 
-------------------
 12-31-2016
 01-01-2017
 01-02-2017
 01-03-2017
 01-04-2017
 01-05-2017
 01-06-2017
 01-07-2017
(8 rows)

select pyreturnsetofint8yield(9);
 pyreturnsetofint8yield 
------------------------
                      0
                      1
                      2
                      3
                      4
                      5
                      6
                      7
                      8
(9 rows)

select pyreturnsetofint8yield(0);
 pyreturnsetofint8yield 
------------------------
(0 rows)

-- Test that container cannot access filesystem of the host
select pywriteFile();
       pywritefile        
--------------------------
 wrote foobar to /tmp/foo
(1 row)

\! ls -l /tmp/foo
ls: cannot access /tmp/foo: No such file or directory
select pyconcat(fname, lname) from users order by 1;
 pyconcat  
-----------
 janedoe
 johndoe
 ricksmith
 willemdoe
(4 rows)

select pyconcatall();
      pyconcatall      
-----------------------
 jane,john,rick,willem
(1 row)

select pynested_call_three('a');
 pynested_call_three 
---------------------
 a
(1 row)

select pynested_call_two('a');
      pynested_call_two       
------------------------------
 {'pynested_call_three': 'a'}
(1 row)

select pynested_call_one('a');
                   pynested_call_one                   
-------------------------------------------------------
 {'pynested_call_two': "{'pynested_call_three': 'a'}"}
(1 row)

select py_plpy_get_record();
 py_plpy_get_record 
--------------------
                 10
(1 row)

select pylogging();
INFO:  this is the info message
NOTICE:  this is the notice message
WARNING:  this is the warning message
ERROR:  this is the error message (plcontainer.c:221)
select pylogging2();
INFO:  this is the info message
CONTEXT:  SQL statement "select pylogging()"
NOTICE:  this is the notice message
CONTEXT:  SQL statement "select pylogging()"
WARNING:  this is the warning message
CONTEXT:  SQL statement "select pylogging()"
ERROR:  this is the error message (plcontainer.c:221)
CONTEXT:  SQL statement "select pylogging()"
select pygdset('1','a');
 pygdset 
---------
 ok
(1 row)

select pygdset('2','b');
 pygdset 
---------
 ok
(1 row)

select pygdset('3','c');
 pygdset 
---------
 ok
(1 row)

select pygdgetall();
 pygdgetall 
------------
 1:a
 2:b
 3:c
(3 rows)

select pygdset('1','d');
 pygdset 
---------
 ok
(1 row)

select pygdgetall();
 pygdgetall 
------------
 1:d
 2:b
 3:c
(3 rows)

select pysdset('a','000');
INFO:  SD a -> 000
 pysdset 
---------
 ok
(1 row)

select pysdset('b','111');
INFO:  SD a -> 000
INFO:  SD b -> 111
 pysdset 
---------
 ok
(1 row)

select pysdset('c','222');
INFO:  SD a -> 000
INFO:  SD b -> 111
INFO:  SD c -> 222
 pysdset 
---------
 ok
(1 row)

select pysdgetall();
 pysdgetall 
------------
(0 rows)

select pysdset('d','333');
INFO:  SD a -> 000
INFO:  SD b -> 111
INFO:  SD c -> 222
INFO:  SD d -> 333
 pysdset 
---------
 ok
(1 row)

select pysdgetall();
 pysdgetall 
------------
(0 rows)

select pyunargs1('foo');
 pyunargs1 
-----------
 foo
(1 row)

select pyunargs2(123, 'foo');
 pyunargs2 
-----------
 123foo
(1 row)

select pyunargs3(123, 'foo', 'bar');
 pyunargs3 
-----------
 123foobar
(1 row)

select pyunargs4(1,null,null,1);
 pyunargs4 
-----------
         4
(1 row)

select pylargeint8in(array_agg(id)) from generate_series(1,100000) id;
 pylargeint8in 
---------------
       50000.5
(1 row)

select avg(x) from (select unnest(pylargeint8out(100000)) as x) as q;
   avg   
---------
 49999.5
(1 row)

select pylargetextin(string_agg(x,',')) from (select x::varchar from generate_series(1,100000) x) as q;
 pylargetextin 
---------------
        588894
(1 row)

select length(pylargetextout(100000));
 length 
--------
 588894
(1 row)

select pytestudt1( ('t', 1, 2, 3, 4, 5, 6, 'foobar')::py_test_type );
 pytestudt1 
------------
         10
(1 row)

select pytestudt2( (
        array['t','f','t']::bool[],
        array[1,2,3]::smallint[],
        array[2,3,4]::int[],
        array[3,4,5]::int8[],
        array[4.5,5.5,6.5]::float4[],
        array[5.5,6.5,7.5]::float8[],
        array[6.5,7.5,8.5]::numeric[],
        array['a','b','c']::varchar[])::py_test_type2 );
 pytestudt2 
------------
         10
(1 row)

select pytestudt3( array[(1,1,'a'), (2,2,'b'), (3,3,'c')]::py_test_type3[] );
        pytestudt3        
--------------------------
 #1|1.0|a#2|2.0|b#3|3.0|c
(1 row)

select pytestudt4( array[
                (1,array[1,2,3],array['a','b','c']),
                (2,array[2,3,4],array['b','c','d']),
                (3,array[3,4,5],array['c','d','e'])
            ]::py_test_type4[] );
              pytestudt4               
---------------------------------------
 #1|6.0|a,b,c#2|9.0|b,c,d#3|12.0|c,d,e
(1 row)

select pytestudt5(null::py_test_type4[]);
 pytestudt5 
------------
          1
(1 row)

select pytestudt5(array[null]::py_test_type4[]);
 pytestudt5 
------------
          2
(1 row)

select pytestudt6();
     pytestudt6      
---------------------
 (t,1,2,3,4,5,6,foo)
(1 row)

select pytestudt7();
        pytestudt7         
---------------------------
 {"(1,2,foo)","(3,4,bar)"}
(1 row)

select pytestudt8();
 pytestudt8 
------------
 (1,2,foo)
 (3,4,bar)
(2 rows)

select pytestudt9();
        pytestudt9         
---------------------------
 {"(1,2,foo)","(3,4,bar)"}
 {"(5,6,buz)","(7,8,zzz)"}
(2 rows)

select * from unnest(pytestudt10());
 a |   b    |     c      
---+--------+------------
 1 | {2,22} | {foo,foo2}
 3 | {4,44} | {bar,bar2}
(2 rows)

select * from pytestudt11();
 a |   b    |     c      
---+--------+------------
 1 | {2,22} | {foo,foo2}
 3 | {4,44} | {bar,bar2}
(2 rows)

select unnest(a) from (select pytestudt12() as a) as q;
          unnest           
---------------------------
 (1,"{2,22}","{foo,foo2}")
 (3,"{4,44}","{bar,bar2}")
 (5,"{6,66}","{buz,buz2}")
 (7,"{8,88}","{zzz,zzz2}")
(4 rows)

select * from pytestudtrecord1() as t(a int, b int, c varchar);
 a | b |  c  
---+---+-----
 1 | 2 | foo
(1 row)

select * from pytestudtrecord2() as t(a int, b int, c varchar);
 a | b |  c  
---+---+-----
 1 | 2 | foo
 3 | 4 | bar
(2 rows)

select pyinvalid_function();
ERROR:  exception occurred: (plcontainer.c:249)
DETAIL:  
 Function produced NULL output 
 Traceback (most recent call last):
  File "<string>", line 5, in pyinvalid_function
AttributeError: 'module' object has no attribute 'foobar'
select pyinvalid_syntax();
ERROR:  exception occurred: (plcontainer.c:249)
DETAIL:  
 Cannot compile function in Python 
 SyntaxError: ('invalid syntax', ('<string>', 7, 1, '\n'))
